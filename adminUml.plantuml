@startuml adminUrl

actor Admin
entity AdminController
entity AdminService
entity AdminRepository

entity AdminMemberController
entity AdminMemberService
entity AdminMemberRepository

entity BoardController
entity BoardService
entity BoardRepository

entity MarkdownManager

database adminMember
database board

Admin -> AdminController : path=/admin
alt adminMember in session:
    Admin <- AdminController : view=/admin/adminHome
else adminMember not in session:
    Admin <- AdminController : view=/admin/signIn
end

group signIn
    Admin -> AdminMemberController : path=/admin/signIn data=AdminMember{account,password}
    AdminMemberController -> AdminMemberService : signIn(adminMember)
    AdminMemberService -> AdminMemberRepository : selectByAccount(adminMember)

    alt if the result exists
        AdminMemberService <- AdminMemberRepository : return AdminMember
        alt if adminMember.password == returnedAdminMember.password
            AdminMemberController <- AdminMemberService : adminMember
        else if adminMember.password != returnedAdminMember.password
            AdminMemberController <- AdminMemberService : throw AdminMemberSignInException
        end
    else if no result
        AdminMemberService <- AdminMemberRepository : return null
        AdminMemberController <- AdminMemberService : throw AdminMemberSignInException
    end

    alt when return adminMember
        Admin <- AdminMemberController : view=/admin/adminHome
    else AdminMemberSignInException
        Admin <- AdminMemberController : view=/admin/signIn
    end
end

group posting
    Admin -> AdminController : path=/admin/posting(get)
    alt adminMember in session
        Admin <- AdminController : view=/admin/posting
    else adminMember not in session
        Admin <- AdminController : view=/admin/signIn
    end

    Admin -> BoardController : path=/board/posting(post) data=mdContent(String)
    alt adminMember in session
        BoardController -> MarkdownManager : validation(mdContent)
        alt return true
            BoardController -> BoardService : insertPost(mdContent)
            BoardService -> BoardRepository : insertPost(mdContent)
            BoardService <- BoardRepository : mdContent 
            BoardService -> MarkdownManager : mdToHtml(mdContent)
            BoardService <- MarkdownManager : htmlContent
            BoardController <- BoardService : htmlContent
            Admin <- BoardController : view=/board/view data=[htmlContent]
        else ~Exception
            Admin <- BoardController : view=/admin/posting data=[mdContent, ~Exception]
        end
    else adminMember not in session
        Admin <- BoardController : view=/admin/signIn
    end
end

@enduml